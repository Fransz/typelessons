describe("An New Task model", function () {
    describe("upon creation", function () {
        before(function () {
            newTask = new App.NewTaskModel();
        });

        it("should have no letters", function() {
            /* jshint -W030 */
            expect(newTask.get("letters")).to.be.empty;
        });

        it("should be able to add a letters", function() {
            /* jshint -W030, -W069 */
            newTask.addLetter("a");
            expect(newTask.get("letters")['a']).to.exist;
        });

        it("should not be able to add the same letter again, the weight should stay the same", function() {
            /* jshint -W030, -W069 */
            ls = newTask.get("letters");
            ls["a"] = 0.9;
            newTask.set("letters", ls);
            newTask.addLetter("a");

            expect(newTask.get("letters")["a"]).to.exist;
            expect(newTask.get("letters")["a"]).to.be.equal(0.9);
        });

        it("should be able to add a weight for a letter", function () {
            /* jshint -W069 */
            newTask.addWeight('a', 0.8);
            expect(newTask.get("letters")["a"]).to.be.equal(0.8);
        });

        it("should be able to set a letter and its weight at once", function () {
            /* jshint -W030, -W069 */
            newTask.addWeight('b', 0.9);
            expect(newTask.get("letters")["b"]).to.exist;
            expect(newTask.get("letters")["b"]).to.be.equal(0.9);
        });

        it("should be able to ask for the weight of a letter", function () {
            /* jshint -W069 */
            expect(newTask.getWeight("b")).to.be.equal(0.9);
        });

        it("should return undefined if asked the weight of a letter not added", function () {
            /* jshint -W030, -W069 */
            expect(newTask.getWeight("c")).to.be.undefined;
        });

        it("should return autogenerated weight which sum up to (1 - 0.1)", function () {
            /* jshint -W030 */
            newTask.autoWeights();
            ws = _.values(newTask.get("letters"));
            v = _.reduce(ws, function(m, v) { return m + v; }, 0);
            expect(v).to.be.equal(1 - 0.1);
        });

        it("should have the same autogenerated weight for each letter", function () {
            /* jshint -W030 */
            newTask.autoWeights();
            ws = _.values(newTask.get("letters"));
            expect(ws[0]).to.be.equal(ws[1]);
        });
    });
});
